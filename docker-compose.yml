version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports: ["5672:5672", "15672:15672"]
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  mongodb-auth:
    image: mongo
    ports: ["27017:27017"]
    volumes: [auth-data:/data/db]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 30s # Increased for MongoDB
      retries: 5
      start_period: 40s # Added for slow starters

  mongodb-products:
    image: mongo
    ports: ["27018:27017"]
    volumes: [product-data:/data/db]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 40s

  auth-service:
    build: ./auth-service
    ports: ["3000:3000"]
    environment:
      NODE_ENV: development
      MONGO_URI: mongodb://mongodb-auth:27017/auth
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672
      JWT_SECRET: your_jwt_secret
    depends_on:
      rabbitmq: { condition: service_healthy }
      mongodb-auth: { condition: service_healthy }
    restart: unless-stopped

  product-service:
    build: ./product-service
    ports: ["3001:3001"]
    environment:
      NODE_ENV: development
      MONGO_URI: mongodb://mongodb-products:27017/products
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672
      AUTH_SERVICE_URL: http://auth-service:3000
    depends_on:
      rabbitmq: { condition: service_healthy }
      mongodb-products: { condition: service_healthy }
    restart: unless-stopped

volumes:
  rabbitmq-data:
  auth-data:
  product-data:
